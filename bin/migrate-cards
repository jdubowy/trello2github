#!/usr/bin/env python

"""migrate-cards - migrates trello cards to github issues and project board cards

Links:
 - https://trello.com/app-key - log in and go to this url to get a trello api key
 -
"""

__author__      = "Joel Dubowy"

import logging
import sys
import traceback
from argparse import (
    ArgumentParser, RawTextHelpFormatter
)

import requests

from trello2github.trello import TrelloClient
from trello2github.github import GitHubClient

EXAMPLES = """
Basic examples:

 $ {script} --log-level DEBUG \\
     --trello-api-key abc123 \\
     -u johndoe -b 'My Board Name' -l 'My List Name' \\
     --github-api-key 432dfg -o myorgname -r myreponame

 $ {script} --log-level DEBUG \\
     --trello-api-key abc123 --trello-auth-token zyx987 \\
     -u johndoe -b 'My Board Name' -l 'My List Name' \\
     --github-api-key 432dfg -o myorgname -r myreponame

""".format(script=sys.argv[0])


def parse_args():
    parser = ArgumentParser(formatter_class=RawTextHelpFormatter)
    parser.add_argument('--trello-api-key', help="Trello API key", required=True)
    parser.add_argument('--trello-auth-token', help="Trello auth token; will get one if not specified")
    parser.add_argument('-u', '--trello-username', help="e.g. 'johndoe'", required=True)
    parser.add_argument('-b', '--trello-board', help="e.g. 'My Board Name'", required=True)
    parser.add_argument('-l', '--trello-list', help="e.g. 'My List Name'", required=True)
    parser.add_argument('--github-api-key', help="GitHub API key", required=True)
    parser.add_argument('-o', '--github-owner', help="e.g. 'johndoe', 'myorgname'", required=True)
    parser.add_argument('-r', '--github-repo', help="e.g. 'myreponame'", required=True)
    parser.add_argument('--log-level', default="WARN",
        help="Log level - 'DEBUG', 'INFO', 'WARN', 'ERROR'")

    parser.epilog = EXAMPLES
    return parser.parse_args()


def migrate(args):
    trello_client = TrelloClient(args.trello_api_key, args.trello_username,
        args.trello_board, args.trello_list, auth_token=args.trello_auth_token)
    github_client = GitHubClient(args.github_api_key, args.github_owner, args.github_repo)

    # TODO: check if repo has project board; if not, prompt user to create one
    #    (either manually or via API)

    for trello_card in trello_client.get_cards():
        if trello_card['badges']['attachments'] > 0:
            sys.stdout.write("The following card has attachments\n\n")
            sys.stdout.write(trello_card['name'] + '\n\n')
            sys.stdout.write("Choose one of the following:\n")
            sys.stdout.write("  s) skip\n")
            sys.stdout.write("  m) migrate without attachments\n")
            sys.stdout.write("  q) quit\n")
            x = None
            while x not in ('s', 'm', 'q'):
                sys.stdout.write("[smq]: ")
                x = input().strip()

            if x == 'q':
                sys.exit(0)
            elif x == 's':
                continue

        try:
            issue_url = github_client.post_issue(trello_card['name'], trello_card['desc'])
            trello_client.archive_card(trello_card['id'], issue_url)
        except Exception as e:
            sys.stdout.write("Error migrating card \n")
            sys.stdout.write(trello_card['url'] + "\n")
            sys.stdout.write("Press <return> to continue")
            input()


def main():
    args  = parse_args()

    logging.basicConfig(level=getattr(logging, args.log_level))
    for k, v in args.__dict__.items():
        logging.debug('%s: %s', k, v)

    try:
        migrate(args)

    except Exception as e:
        logging.error("*** ERROR: %s", e)
        logging.debug(traceback.format_exc())
        sys.exit(1)


if __name__ == "__main__":
    main()
