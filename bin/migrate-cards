#!/usr/bin/env python

"""migrate-cards - migrates trello cards to github issues and project board cards

Links:
 - https://trello.com/app-key - log in and go to this url to get a trello api key
 -
"""

__author__      = "Joel Dubowy"

import logging
import os
import sys
import traceback
from argparse import (
    ArgumentParser, RawTextHelpFormatter
)

sys.path.insert(0, os.path.abspath(os.path.join(sys.path[0], '../')))
from trello2github.apiclients.trello import TrelloClient
from trello2github.apiclients.github import GitHubClient
from trello2github.prompts import multiple_choice

EXAMPLES = """
Basic examples:

 $ {script} --log-level DEBUG --trello-api-key abc123 -u johndev \\
     -b 'My Board Name' -l 'Foo App TODOs' -o myorgname -r foo-app-repo

 $ {script} --log-level DEBUG --trello-api-key abc123 \\
     -u johndev -b 'My Board Name' -l 'Project Foo Bar TODOs' -o myorgname

 $ {script} --log-level DEBUG --trello-api-key abc123 \\
     --trello-auth-token zyx987 -u johndev -b 'My Board Name' \\
     -l 'My List Name' --github-access-token 458fje -o myorgname -r myreponame

""".format(script=sys.argv[0])


def parse_args():
    parser = ArgumentParser(formatter_class=RawTextHelpFormatter)
    parser.add_argument('--trello-api-key', help="Trello API key", required=True)
    parser.add_argument('--trello-auth-token', help="Trello auth token; will get one if not specified")
    parser.add_argument('-u', '--trello-username', help="e.g. 'johndev'", required=True)
    parser.add_argument('-b', '--trello-board', help="e.g. 'My Board Name'", required=True)
    parser.add_argument('-l', '--trello-list', help="e.g. 'My List Name'", required=True)
    parser.add_argument('--github-access-token', help="GitHub accces token; will get one if not specified")
    parser.add_argument('-o', '--github-owner', help="e.g. 'johndev', 'myorgname'", required=True)
    parser.add_argument('-r', '--github-repo', help="If not specified, a "
        "project card will be created without an associated issue")
    parser.add_argument('-p', '--title-prefix-to-remove',
        help="prefix to remove from trello card titles",
        dest="title_prefixes_to_remove", action="append", default=[])
    parser.add_argument('--log-level', default="WARN",
        help="Log level - 'DEBUG', 'INFO', 'WARN', 'ERROR'")

    parser.epilog = EXAMPLES
    return parser.parse_args()


def migrate(args):
    trello_client = TrelloClient(args.trello_api_key, args.trello_username,
        args.trello_board, args.trello_list, auth_token=args.trello_auth_token)
    github_client = GitHubClient(args.github_owner, repo_name=args.github_repo,
        access_token=args.github_access_token,
        title_prefixes_to_remove=args.title_prefixes_to_remove)

    for trello_card in reversed(trello_client.get_cards()):
        if trello_card['has_attachments']:
            trello_card['attachments'] = trello_client.get_attachements(
                trello_card['id'])

        if trello_card['has_checklists']:
            trello_card['checklists'] = trello_client.get_checklists(
                trello_card['id'])

        try:
            status, issue_url = github_client.post_issue(trello_card['name'],
                trello_card['desc'], trello_card.get('checklists'),
                trello_card.get('attachments'))

            if issue_url or (status == "Archive"):
                trello_client.archive_card(trello_card['id'], issue_url)
            else:
                logging.info("Leaving card in trello")

        except Exception as e:
            logging.debug(traceback.format_exc())
            logging.error("Error migrating card %s", trello_card['name'])
            multiple_choice("Failed to migrate card " + trello_card['name'],
                [('s', 'skip')])
            # don't need to do anything.

def main():
    args  = parse_args()

    logging.basicConfig(level=getattr(logging, args.log_level))
    for k, v in args.__dict__.items():
        logging.debug('%s: %s', k, v)

    try:
        migrate(args)

    except Exception as e:
        logging.error("*** ERROR: %s", e)
        logging.debug(traceback.format_exc())
        sys.exit(1)


if __name__ == "__main__":
    main()
